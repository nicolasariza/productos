{"version":3,"sources":["components/Header.js","config/axios.js","actions/productoActions.js","types/index.js","components/Producto.js","components/Productos.js","actions/alertaActions.js","components/NuevoProducto.js","components/EditarProducto.js","reducers/productosReducer.js","reducers/alertaReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","to","clienteAxios","axios","create","baseURL","agregarProducto","type","payload","agregarProductoExito","producto","agregarProductoError","error","descargarProductos","descargarProductosExito","productos","descargarProductosError","obtenerProductoEliminar","id","eliminarProductoExito","eliminarProductoError","obtenerProductoEditarAction","editarProducto","editarProductoExito","editarProductoError","Producto","nombre","precio","dispatch","useDispatch","history","useHistory","confirmarEliminarProducto","Swal","fire","title","icon","showCancelButton","confirmButtonColor","cancelButtonColor","cancelButtonText","confirmButtonText","then","result","value","a","delete","borrarProductoAction","redireccionarEdicion","obtenerProductoEditar","push","onClick","Productos","useEffect","get","resultado","data","console","log","useSelector","state","cargando","loading","scope","length","map","key","crearAlerta","alerta","ocultarAlerta","NuevoProducto","useState","setNombre","setPrecio","post","text","crearNuevoProductoAction","classes","msg","onSubmit","e","preventDefault","trim","mostrarAlerta","placeholder","name","onChange","target","Number","EditarProducto","setProducto","hisory","productoeditar","onChangeFormulario","put","editarProductoAction","initialState","productoeliminar","combineReducers","action","filter","store","createStore","reducer","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","f","App","basename","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.c9b15076.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary justify-content-between\">\r\n      <div className=\"contariner\">\r\n        <h1><Link to=\"/\" className=\"text-light\">CRUD productos</Link></h1>\r\n      </div>\r\n      <Link to=\"/productos/nuevo\"\r\n        className=\"btn btn-danger nuevo-post d-block d-md-inline-block\"\r\n      >\r\n        Agregar producto &#43;\r\n      </Link>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import axios from 'axios';\r\n\r\nconst clienteAxios = axios.create({\r\n    baseURL: 'http://localhost:4000/'\r\n});\r\n\r\nexport default clienteAxios;","import {\r\n  AGREGAR_PRODUCTO,\r\n  AGREGAR_PRODUCTO_EXITO,\r\n  AGREGAR_PRODUCTO_ERROR,\r\n  COMENZAR_DESCARGA_PRODUCTOS,\r\n  DESCARGA_PRODUCTOS_EXITO,\r\n  DESCARGA_PRODUCTOS_ERROR,\r\n  OBTENER_PRODUCTO_ELIMINAR,\r\n  PRODUCTO_ELIMINADO_EXITO,\r\n  PRODUCTO_ELIMINADO_ERROR,\r\n  OBTENER_PRODUCTO_EDITAR,\r\n  COMENZAR_EDICION_PRODUCTO,\r\n  PRODUCTO_EDITADO_EXITO,\r\n  PRODUCTO_EDITADO_ERROR,\r\n} from \"../types\";\r\n\r\nimport Swal from \"sweetalert2\";\r\nimport clienteAxios from \"../config/axios\";\r\n\r\n// Crear nuevos productos\r\nexport function crearNuevoProductoAction(producto) {\r\n  return async (dispatch) => {\r\n    dispatch(agregarProducto());\r\n    try {\r\n      // insertar en la API\r\n      await clienteAxios.post(\"/productos\", producto);\r\n      dispatch(agregarProductoExito(producto));\r\n      Swal.fire(\"Correcto\", \"El producto se agregó correctamente\", \"success\");\r\n    } catch (error) {\r\n      dispatch(agregarProductoError(true));\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Hubo un error\",\r\n        text: \"Intenta de nuevo\",\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\nconst agregarProducto = () => ({\r\n  type: AGREGAR_PRODUCTO,\r\n  payload: true,\r\n});\r\n\r\nconst agregarProductoExito = (producto) => ({\r\n  type: AGREGAR_PRODUCTO_EXITO,\r\n  payload: producto,\r\n});\r\n\r\nconst agregarProductoError = (error) => ({\r\n  type: AGREGAR_PRODUCTO_ERROR,\r\n  payload: error,\r\n});\r\n\r\n// Funcion que descarga los productos de la base de datos\r\nexport function obtenerProductosAction() {\r\n  return async (dispatch) => {\r\n    // para cambiar el estado de cargando a true\r\n    dispatch(descargarProductos());\r\n    try {\r\n      //Peticion a la api\r\n      const resultado = await clienteAxios.get(\"/productos\");\r\n      // Asinga los productos al state\r\n      dispatch(descargarProductosExito(resultado.data));\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(descargarProductosError());\r\n    }\r\n  };\r\n}\r\n\r\nconst descargarProductos = () => ({\r\n  type: COMENZAR_DESCARGA_PRODUCTOS,\r\n  payload: true,\r\n});\r\n\r\nconst descargarProductosExito = (productos) => ({\r\n  type: DESCARGA_PRODUCTOS_EXITO,\r\n  payload: productos,\r\n});\r\n\r\nconst descargarProductosError = () => ({\r\n  type: DESCARGA_PRODUCTOS_ERROR,\r\n  payload: true,\r\n});\r\n\r\n// Selecciona y elimina el producto\r\nexport function borrarProductoAction(id) {\r\n  return async (dispatch) => {\r\n    dispatch(obtenerProductoEliminar(id));\r\n    try {\r\n      await clienteAxios.delete(`/productos/${id}`);\r\n      dispatch(eliminarProductoExito());\r\n      Swal.fire(\r\n        \"Eliminado!\",\r\n        \"El producto se eliminó correctamente.\",\r\n        \"success\"\r\n      );\r\n    } catch (error) {\r\n      dispatch(eliminarProductoError());\r\n    }\r\n  };\r\n}\r\n\r\nconst obtenerProductoEliminar = (id) => ({\r\n  type: OBTENER_PRODUCTO_ELIMINAR,\r\n  payload: id,\r\n});\r\n\r\nconst eliminarProductoExito = () => ({\r\n  type: PRODUCTO_ELIMINADO_EXITO,\r\n});\r\n\r\nconst eliminarProductoError = () => ({\r\n  type: PRODUCTO_ELIMINADO_ERROR,\r\n  payload: true,\r\n});\r\n\r\n// Colocar producto en edicion\r\nexport function obtenerProductoEditar(producto) {\r\n  return (dispatch) => {\r\n    dispatch(obtenerProductoEditarAction(producto));\r\n  };\r\n}\r\n\r\nconst obtenerProductoEditarAction = (producto) => ({\r\n  type: OBTENER_PRODUCTO_EDITAR,\r\n  payload: producto,\r\n});\r\n\r\n// Editar un registro en la api\r\nexport function editarProductoAction(producto) {\r\n  return async (dispatch) => {\r\n    dispatch( editarProducto(producto));\r\n    try{\r\n      await clienteAxios.put(`/productos/${producto.id}`, producto);\r\n      dispatch(editarProductoExito(producto));\r\n    }catch(error){\r\n      console.log(error);\r\n      dispatch(editarProductoError());\r\n    }\r\n  }\r\n  \r\n}\r\n\r\nconst editarProducto = () => ({\r\n  type:COMENZAR_EDICION_PRODUCTO\r\n})\r\n\r\nconst editarProductoExito = (producto) => ({\r\n  type:PRODUCTO_EDITADO_EXITO,\r\n  payload:producto\r\n})\r\n\r\nconst editarProductoError = () => ({\r\n  type: PRODUCTO_EDITADO_ERROR,\r\n  payload: true,\r\n});","export const AGREGAR_PRODUCTO = 'AGREGAR_PRODUCTO';\r\nexport const AGREGAR_PRODUCTO_EXITO = 'AGREGAR_PRODUCTO_EXITO';\r\nexport const AGREGAR_PRODUCTO_ERROR = 'AGREGAR_PRODUCTO_ERROR';\r\n\r\nexport const COMENZAR_DESCARGA_PRODUCTOS = 'COMENZAR_DESCARGA_PRODUCTOS';\r\nexport const DESCARGA_PRODUCTOS_EXITO = 'DESCARGA_PRODUCTOS_EXITO';\r\nexport const DESCARGA_PRODUCTOS_ERROR = 'DESCARGA_PRODUCTOS_ERROR';\r\n\r\nexport const OBTENER_PRODUCTO_ELIMINAR = 'OBTENER_PRODUCTO_ELIMINAR';\r\nexport const PRODUCTO_ELIMINADO_EXITO = 'PRODUCTO_ELIMINADO_EXITO';\r\nexport const PRODUCTO_ELIMINADO_ERROR = 'PRODUCTO_ELIMINADO_ERROR';\r\n\r\nexport const OBTENER_PRODUCTO_EDITAR = 'OBTENER_PRODUCTO_EDITAR';\r\nexport const COMENZAR_EDICION_PRODUCTO = 'COMENZAR_EDICION_PRODUCTO';\r\nexport const PRODUCTO_EDITADO_EXITO = 'PRODUCTO_EDITADO_EXITO';\r\nexport const PRODUCTO_EDITADO_ERROR = 'PRODUCTO_EDITADO_ERROR';\r\n\r\nexport const MOSTRAR_ALERTA = 'MOSTRAR_ALERTA';\r\nexport const OCULTAR_ALERTA = 'OCULTAR_ALERTA';","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { borrarProductoAction, obtenerProductoEditar } from \"../actions/productoActions\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst Producto = ({ producto }) => {\r\n  const { nombre, precio, id } = producto;\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory(); // habilitar history para redireccion\r\n\r\n  // Confirmar si el usuario desea eliminar el producto\r\n  const confirmarEliminarProducto = (id) => {\r\n    Swal.fire({\r\n      title: \"¿Estás seguro?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      cancelButtonText: \"Cancelar\",\r\n      confirmButtonText: \"Sí, eliminar!\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        dispatch(borrarProductoAction(id));\r\n      }\r\n    });\r\n  };\r\n\r\n  // función que redirige de forma programada\r\n  const redireccionarEdicion = (producto) => {\r\n    dispatch(obtenerProductoEditar(producto))\r\n    history.push(`/productos/editar/${producto.id}`);\r\n  };\r\n  return (\r\n    <tr>\r\n      <td>{nombre}</td>\r\n      <td>\r\n        <span className=\"font-weight-bold\">$ {precio}</span>\r\n      </td>\r\n      <td className=\"acciones\">\r\n        <button\r\n          onClick={() => redireccionarEdicion(producto)}\r\n          type=\"button\"\r\n          className=\"btn btn-primary mr-2\"\r\n        >\r\n          Editar\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-danger\"\r\n          onClick={() => confirmarEliminarProducto(id)}\r\n        >\r\n          Eliminar\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default Producto;\r\n","import React, { Fragment, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { obtenerProductosAction } from \"../actions/productoActions\";\r\nimport Producto from \"./Producto\";\r\n\r\nconst Productos = () => {\r\n  // utilizar use dispatch y devuelve una funcion\r\n  // Se usa para ejecutar las funciones en los actions\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    // Consultar la api\r\n    const cargarProductos = () => dispatch(obtenerProductosAction());\r\n    cargarProductos();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  // useSelector para obtener el state\r\n  const productos = useSelector((state) => state.productos.productos);\r\n  const error = useSelector((state) => state.productos.error);\r\n  const cargando = useSelector((state) => state.productos.loading);\r\n\r\n  return (\r\n    <Fragment>\r\n      <h2 className=\"text-center my-5\">Listado de productos</h2>\r\n      {error ? (\r\n        <p className=\"font-weight-bold alert alert-danger text-center\">\r\n          Hubo un error\r\n        </p>\r\n      ) : null}\r\n      {cargando ? <p className=\"text-center\"> Cargando... </p> : null}\r\n      <table className=\"table table-striped\">\r\n        <thead className=\"bg-primary table-dark\">\r\n          <tr>\r\n            <th scope=\"col\">Nombre</th>\r\n            <th scope=\"col\">Precio</th>\r\n            <th scope=\"col\">Acciones</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {productos.length === 0\r\n            ? \"No hay productos\"\r\n            : productos.map((producto) => (\r\n                <Producto key={producto.id} producto={producto} />\r\n              ))}\r\n        </tbody>\r\n      </table>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Productos;\r\n","import { MOSTRAR_ALERTA, OCULTAR_ALERTA } from \"../types\";\r\n\r\n\r\n// Muestra una alerta\r\nexport function mostrarAlerta(alerta){\r\n    return (dispatch) => {\r\n        dispatch(crearAlerta(alerta));\r\n    }\r\n}\r\n\r\nconst crearAlerta = (alerta) => ({\r\n    type: MOSTRAR_ALERTA,\r\n    payload: alerta\r\n})\r\n\r\nexport function ocultarAlertaAction() {\r\n    return (dispatch) => {\r\n        dispatch(ocultarAlerta());\r\n    }\r\n}\r\n\r\nconst ocultarAlerta = () => ({\r\n    type:OCULTAR_ALERTA\r\n})","import React, { useState } from \"react\";\r\n// Actions de Redux\r\nimport { crearNuevoProductoAction } from \"../actions/productoActions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { mostrarAlerta, ocultarAlertaAction } from \"../actions/alertaActions\";\r\n\r\nconst NuevoProducto = ({history}) => {\r\n  // State del componente\r\n  const [nombre, setNombre] = useState(\"\");\r\n  const [precio, setPrecio] = useState(0);\r\n\r\n  // utilizar use dispatch y devuelve una funcion\r\n  // Se usa para ejecutar las funciones en los actions\r\n  const dispatch = useDispatch();\r\n\r\n  // Acceder al state del store\r\n  const cargando = useSelector((state) => state.productos.loading);\r\n  const error = useSelector((state) => state.productos.error);\r\n  const alerta = useSelector(state=> state.alerta.alerta);\r\n  // llamar el action de productoAction\r\n  const agregarProducto = (producto) =>\r\n    dispatch(crearNuevoProductoAction(producto));\r\n\r\n  const submitNuevoProducto = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (nombre.trim() === \"\" || precio <= 0) {\r\n      const alerta = {\r\n        msg: 'Ambos campos son obligatorios',\r\n        classes: 'alert alert-danger text-center text-uppercase p3'\r\n      }\r\n      dispatch(mostrarAlerta(alerta));\r\n      return;\r\n    }\r\n    dispatch(ocultarAlertaAction());\r\n    agregarProducto({\r\n      nombre,\r\n      precio,\r\n    });\r\n    // Redireccionar al home\r\n    history.push('/');\r\n  };\r\n  return (\r\n    <div className=\"row justify-content-center\">\r\n      <div className=\"col-md-8\">\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <h2 className=\"text-center mb-4 font-weight-bold\">\r\n              Agregar un nuevo producto\r\n            </h2>\r\n            {alerta ? <p className={alerta.classes}>{alerta.msg}</p>:null}\r\n            <form onSubmit={submitNuevoProducto}>\r\n              <div className=\"form-group\">\r\n                <label>Nombre producto</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Nombre del producto\"\r\n                  name=\"nombre\"\r\n                  value={nombre}\r\n                  onChange={(e) => setNombre(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Precio producto</label>\r\n                <input\r\n                  type=\"number\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Precio del producto\"\r\n                  name=\"precio\"\r\n                  value={precio}\r\n                  onChange={(e) => setPrecio(Number(e.target.value))}\r\n                />\r\n              </div>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary font-weight-bold text-uppercase d-block w-100\"\r\n              >\r\n                Agregar\r\n              </button>\r\n            </form>\r\n            {cargando ? <p>Cargando...</p> : null}\r\n            {error ? (\r\n              <p className=\"alert alert-danger p2 mt-4 text-center\">\r\n                Hubo un error\r\n              </p>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NuevoProducto;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { editarProductoAction } from \"../actions/productoActions\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst EditarProducto = () => {\r\n  // Nuevo state de producto\r\n  const [producto, setProducto] = useState({\r\n    nombre: \"\",\r\n    precio: null,\r\n  });\r\n\r\n  // utilizar use dispatch y devuelve una funcion\r\n  // Se usa para ejecutar las funciones en los actions\r\n  const dispatch = useDispatch();\r\n\r\n  const hisory = useHistory();\r\n\r\n  // useSelector para obtener el state\r\n  const productoeditar = useSelector((state) => state.productos.productoeditar);\r\n\r\n  // Llenar el state local al cargar la pagina\r\n  useEffect(() => {\r\n    setProducto(productoeditar);\r\n  }, [productoeditar]);\r\n  \r\n  const { nombre, precio } = producto;\r\n\r\n  // Leer los datos del formulario\r\n  const onChangeFormulario = (e) => {\r\n\r\n    setProducto({\r\n      ...producto,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const submitEditarProducto = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(editarProductoAction(producto));\r\n\r\n    hisory.push(\"/\");\r\n  };\r\n  return (\r\n    <div className=\"row justify-content-center\">\r\n      <div className=\"col-md-8\">\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <h2 className=\"text-center mb-4 font-weight-bold\">\r\n              Editar producto\r\n            </h2>\r\n            <form onSubmit={submitEditarProducto}>\r\n              <div className=\"form-group\">\r\n                <label>Nombre producto</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Nombre del producto\"\r\n                  name=\"nombre\"\r\n                  value={nombre}\r\n                  onChange={onChangeFormulario}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Precio producto</label>\r\n                <input\r\n                  type=\"number\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Precio del producto\"\r\n                  name=\"precio\"\r\n                  value={precio}\r\n                  onChange={onChangeFormulario}\r\n                />\r\n              </div>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary font-weight-bold text-uppercase d-block w-100\"\r\n              >\r\n                Guardar Cambios\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditarProducto;\r\n","import {\r\n  AGREGAR_PRODUCTO,\r\n  AGREGAR_PRODUCTO_EXITO,\r\n  AGREGAR_PRODUCTO_ERROR,\r\n  COMENZAR_DESCARGA_PRODUCTOS,\r\n  DESCARGA_PRODUCTOS_EXITO,\r\n  DESCARGA_PRODUCTOS_ERROR,\r\n  OBTENER_PRODUCTO_ELIMINAR,\r\n  PRODUCTO_ELIMINADO_ERROR,\r\n  PRODUCTO_ELIMINADO_EXITO,\r\n  OBTENER_PRODUCTO_EDITAR,\r\n  PRODUCTO_EDITADO_EXITO,\r\n  PRODUCTO_EDITADO_ERROR,\r\n} from \"../types\";\r\n\r\n// Cada reducer tiene su propio state\r\nconst initialState = {\r\n  productos: [],\r\n  error: null,\r\n  loading: false,\r\n  productoeliminar: null,\r\n  productoeditar: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case COMENZAR_DESCARGA_PRODUCTOS:\r\n    case AGREGAR_PRODUCTO:\r\n      return {\r\n        ...state,\r\n        loading: action.payload,\r\n      };\r\n    case AGREGAR_PRODUCTO_EXITO:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        productos: [...state.productos, action.payload],\r\n      };\r\n    case PRODUCTO_EDITADO_ERROR:\r\n    case PRODUCTO_ELIMINADO_ERROR:\r\n    case DESCARGA_PRODUCTOS_ERROR:\r\n    case AGREGAR_PRODUCTO_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case DESCARGA_PRODUCTOS_EXITO:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        productos: action.payload,\r\n      };\r\n    case OBTENER_PRODUCTO_ELIMINAR:\r\n      return {\r\n        ...state,\r\n        productoeliminar: action.payload,\r\n      };\r\n    case PRODUCTO_ELIMINADO_EXITO:\r\n      return {\r\n        ...state,\r\n        productos: state.productos.filter(\r\n          (producto) => producto.id !== state.productoeliminar\r\n        ),\r\n        productoeliminar: null,\r\n      };\r\n    case OBTENER_PRODUCTO_EDITAR:\r\n      return {\r\n        ...state,\r\n        productoeditar: action.payload,\r\n      };\r\n    case PRODUCTO_EDITADO_EXITO:\r\n      return {\r\n        ...state,\r\n        productoeditar: null,\r\n        productos: state.productos.map((producto) =>\r\n          producto.id === action.payload.id\r\n            ? (producto = action.payload)\r\n            : producto\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { MOSTRAR_ALERTA, OCULTAR_ALERTA } from \"../types\";\r\n\r\nconst initialState = {\r\n  alerta: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case MOSTRAR_ALERTA:\r\n      return {\r\n        ...state,\r\n        alerta: action.payload,\r\n      };\r\n    case OCULTAR_ALERTA:\r\n      return {\r\n        ...state,\r\n        alerta: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport productosReducer from \"./productosReducer\";\r\nimport alertaReducer from \"./alertaReducer\";\r\n// Combine reducers por si se tienen varios reducers y así solo pasar uno al store\r\nexport default combineReducers({\r\n    productos: productosReducer,\r\n    alerta : alertaReducer\r\n});","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport reducer from \"./reducers\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  compose(\r\n    applyMiddleware(thunk),\r\n    typeof window === 'object' && \r\n        typeof window.__REDUX_DEVTOOLS_EXTENSION__ != 'undefined' ?\r\n            window.__REDUX_DEVTOOLS_EXTENSION__() : f => f\r\n  )\r\n);\r\n\r\nexport default store;","import React from \"react\";\nimport Header from \"./components/Header\";\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\nimport Productos from \"./components/Productos\";\nimport NuevoProducto from \"./components/NuevoProducto\";\nimport EditarProducto from \"./components/EditarProducto\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nfunction App() {\n\n  return (\n    <HashRouter basename=\"/\">\n      {/*Provider que permitira tener todos los datos del store en toda la app*/}\n      <Provider store={store}>\n        <Header />\n        <div className=\"container mt-5\">\n          <p className=\"alert alert-warning\">Para usarlo se require un json server</p>\n          <Switch>\n            <Route exact path=\"/\" component={Productos} />\n            <Route exact path=\"/productos/nuevo\" component={NuevoProducto} />\n            <Route\n              exact\n              path=\"/productos/editar/:id\"\n              component={EditarProducto}\n            />\n          </Switch>\n        </div>\n      </Provider>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}